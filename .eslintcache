[{"C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\index.js":"1","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\App.js":"2","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\reportWebVitals.js":"3","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Login.js":"4","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Landing.js":"5","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Entry.js":"6","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\UserInfo.js":"7","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Home.js":"8","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Navbar.js":"9","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Profile.js":"10","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Button.js":"11","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Search.js":"12","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\SearchResult.js":"13","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\AddContent.js":"14","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\SelfUserInfo.js":"15","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\auth.js":"16","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\SelfProfile.js":"17","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\NotFound.js":"18"},{"size":600,"mtime":1609095994283,"results":"19","hashOfConfig":"20"},{"size":1674,"mtime":1609266726554,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":3667,"mtime":1609454983968,"results":"23","hashOfConfig":"20"},{"size":4923,"mtime":1609454984808,"results":"24","hashOfConfig":"20"},{"size":1522,"mtime":1609454986704,"results":"25","hashOfConfig":"20"},{"size":1668,"mtime":1609351350042,"results":"26","hashOfConfig":"20"},{"size":4114,"mtime":1609454986045,"results":"27","hashOfConfig":"20"},{"size":3511,"mtime":1609454983264,"results":"28","hashOfConfig":"20"},{"size":6291,"mtime":1609454981153,"results":"29","hashOfConfig":"20"},{"size":3215,"mtime":1609454987318,"results":"30","hashOfConfig":"20"},{"size":1975,"mtime":1609460450999,"results":"31","hashOfConfig":"20"},{"size":692,"mtime":1609454969146,"results":"32","hashOfConfig":"20"},{"size":5154,"mtime":1609454987950,"results":"33","hashOfConfig":"20"},{"size":1507,"mtime":1609454967050,"results":"34","hashOfConfig":"20"},{"size":2201,"mtime":1609019572401,"results":"35","hashOfConfig":"20"},{"size":6221,"mtime":1609454968024,"results":"36","hashOfConfig":"20"},{"size":257,"mtime":1609454981980,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rm2rl4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\index.js",[],["88","89"],"C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\App.js",["90","91","92","93","94","95"],"// TODO \n// self profile --düzenle\n// follow butonu --style düzenle, bildirim koy\n// routeları protected yap\n// search modülü hazırla\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Landing from './components/Landing'\nimport Login from './components/Login'\nimport Entry from './components/Entry'\nimport UserInfo from './components/UserInfo'\nimport Home from './components/Home'\nimport Navbar from './components/Navbar'\nimport Profile from './components/Profile'\nimport SelfProfile from './components/SelfProfile'\nimport Button from './components/Button'\nimport Search from './components/Search'\nimport SearchResult from './components/SearchResult'\nimport AddContent from './components/AddContent'\nimport SelfUserInfo from './components/SelfUserInfo'\nimport { ToastProvider } from \"react-toast-notifications\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" exact component={Landing}/>\n        <Route path=\"/login\" exact component={Login}/>\n        <Route path=\"/lib\">\n          <Navbar/>\n          <Route path=\"/lib/home\" exact component={Home}/>\n          <Route path=\"/lib/profile\" exact component={SelfProfile}/>\n          <Route path=\"/lib/profile/:id\" exact component={Profile}/>\n          <Route path=\"/lib/userinfo\" exact component={UserInfo}/>\n          <Route path=\"/lib/search/:query\" exact component={Search}/>\n        </Route>\n        <Route path=\"/test\">\n          <Route path=\"/test/addcontent\" component={AddContent} />\n          <Route path=\"/test/self\" component={SelfUserInfo}/>\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\reportWebVitals.js",[],"C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Login.js",["96","97","98"],"import React from 'react'\r\nimport Book from '../images/newbook.svg'\r\nimport DownArrow from '../images/down-arrow.svg'\r\nimport Illustration from '../images/5836.svg'\r\nimport {Link} from 'react-router-dom'\r\nimport classes from './styles/login.module.css'\r\nimport emailicon from '../images/email.svg'\r\nimport padlock from '../images/padlock.svg'\r\nimport Deneme from '../auth'\r\nimport {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    //const auth = new Auth();\r\n    const history = useHistory();\r\n    const {addToast} = useToasts();\r\n\r\n    const emailChangeHandler = (e) => {\r\n        setEmail(e.target.value);       \r\n    }\r\n    const passwordChangeHandler = (e) => {\r\n        setPassword(e.target.value);\r\n        console.log(password) \r\n    }\r\n\r\n    const loginProcess = () => {\r\n\r\n        const data = {\r\n            email: email,\r\n            password: password\r\n        }\r\n\r\n        axios.post(\"https://my-web-lib.herokuapp.com/members/login\", data)\r\n            .then(res => {\r\n                console.log(res);\r\n                localStorage.setItem(\"token\", res.data.token);\r\n                localStorage.setItem(\"currentUser\", res.data.data._id);\r\n                if (res.status == 200 && localStorage.getItem(\"token\")) {\r\n                    addToast(\"You have logged in succesfully!\", {\r\n                        appearance: 'success',\r\n                        autoDismiss: true,\r\n                    })\r\n                    setTimeout(() => {\r\n                        history.push(\"/lib/home\");\r\n                    }, 1000);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                \r\n                    addToast(error.response.data.message, {\r\n                        appearance: 'error',\r\n                        autoDismiss: true,\r\n                    })\r\n                \r\n            })\r\n    }\r\n\r\n    const loginUser = () => {\r\n        try {\r\n            loginProcess();      \r\n        } catch (error) {\r\n            console.log(error);\r\n        }      \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <nav className={classes.navbar}>\r\n                <img src={Book} alt=\"\"/>\r\n                <h1>MyWebLib</h1>\r\n            </nav>\r\n            <div className={classes.form}>\r\n                <em>store and share your favourite books and movies</em>\r\n                <h3>log in</h3>\r\n                <img src={DownArrow} width=\"25px\" alt=\"\"/>\r\n                <div className={classes.insideform} action=\"\">\r\n                    <input type=\"email\" onChange={emailChangeHandler} placeholder=\"e-mail\" name=\"\" id=\"\"/>\r\n                    <img className={classes.emailicon} src={emailicon} width=\"25px\" alt=\"\"/>\r\n                    <input type=\"password\" onChange={passwordChangeHandler} placeholder=\"password\" name=\"\" id=\"\"/>\r\n                    <img className={classes.padlock} src={padlock} width=\"25px\" alt=\"\"/>\r\n                    <div className={classes.submit}>\r\n                        <p>don't have an account? <Link to=\"/\">join now</Link></p>\r\n                        \r\n                        <button onClick={loginUser}>log in</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.illustration}>\r\n                    <img src={Illustration} width=\"1040px\" height=\"780px\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Landing.js",["99","100","101","102","103","104","105","106","107"],"import React from 'react'\r\n//import './styles/landing.css'\r\nimport classes from './styles/landing.module.css'\r\nimport Book from '../images/newbook.svg'\r\nimport DownArrow from '../images/down-arrow.svg'\r\nimport Illustration from '../images/5836.svg'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useState} from 'react'\r\nimport emailicon from '../images/email.svg'\r\nimport padlock from '../images/padlock.svg'\r\nimport user from '../images/user.svg'\r\nimport Entry from './Entry'\r\nimport Auth from '../auth'\r\nimport axios from 'axios'\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications'\r\n\r\n\r\n\r\n\r\n\r\nconst Landing = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n    const {addToast} = useToasts();\r\n\r\n    const nameChangeHandler = (e) => {\r\n        setName(e.target.value);\r\n    } \r\n\r\n    const lastNameChangeHandler = (e) => {\r\n        setLastName(e.target.value);\r\n    } \r\n\r\n    const emailChangeHandler = (e) => {\r\n        setEmail(e.target.value);       \r\n    }\r\n    const passwordChangeHandler = (e) => {\r\n        setPassword(e.target.value);      \r\n    }\r\n\r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n      }\r\n      \r\n\r\n    const submitUser = () => {\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                firstName: capitalizeFirstLetter(name),\r\n                lastName: capitalizeFirstLetter(lastName),\r\n                email: email,\r\n                password: password\r\n            },\r\n            url: \"https://my-web-lib.herokuapp.com/members/signup\",\r\n        }).then((res) => {\r\n            console.log(res)\r\n            if(res.status == 200){\r\n                addToast(\"You have signed up succesfully!\", {\r\n                    appearance: 'success',\r\n                    autoDismiss: true,\r\n                })\r\n                setTimeout(() => {\r\n                    history.push(\"/login\");\r\n                }, 1000);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n            if (error.response.status == 409){\r\n                addToast(\"This e-mail has already registered\", {\r\n                    appearance: 'error',\r\n                    autoDismiss: true,\r\n                })\r\n            }\r\n            else{\r\n            error.response.data.errors.map(error => {\r\n                addToast(error.msg, {\r\n                    appearance: 'error',\r\n                    autoDismiss: true,\r\n                })\r\n            })}\r\n        })\r\n    }\r\n        \r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav className={classes.navbar}>\r\n                <img src={Book} alt=\"\"/>\r\n                <h1>MyWebLib</h1>\r\n            </nav>\r\n            <div className={classes.form}>\r\n                <em>store and share your favourite books and movies</em>\r\n                <h3>join now</h3>\r\n                {/* <button onClick={() => auth.signup(\"berkdeneme\", \"berkdeneme\", \"deneme@mail.com\", \"1Aabbcc.\")}>nolur</button>\r\n                <button onClick={() => auth.login(\"deneme@mail.com\", \"1Aabbcc.\")}>login</button> */}\r\n                <img src={DownArrow} width=\"25px\" alt=\"\"/>\r\n                <div className={classes.insideform} action=\"\">\r\n                    <div className={classes.namesurname}>\r\n                        <label className={classes.name} for=\"username\"></label>\r\n                        <input onChange={nameChangeHandler} type=\"text\" className={classes.firstname} placeholder=\"name\" name=\"\" />\r\n                        <label className={classes.lastname} for=\"email\"></label>\r\n                        <input onChange={lastNameChangeHandler} type=\"text\" className={classes.surname} placeholder=\"surname\" name=\"\" />\r\n                    </div>\r\n                    <label className={classes.email} for=\"email\"></label>\r\n                    <input onChange={emailChangeHandler} type=\"email\" placeholder=\"e-mail\" name=\"\" id=\"email\"/>\r\n                    <label className={classes.password} for=\"password\"></label>\r\n                    <input onChange={passwordChangeHandler} type=\"password\" placeholder=\"password\" name=\"\" id=\"password\"/>\r\n                    <div className={classes.submit}>\r\n                        <p>already have an account? <Link to=\"/login\">log in</Link></p>\r\n                        {/* <input onSubmit={submitUser} type=\"submit\" value=\"join\"/> */}\r\n                        <button onClick={submitUser}>join</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.illustration}>\r\n                    <img src={Illustration} width=\"1040px\" height=\"780px\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default Landing;\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Entry.js",["108","109"],"import React from 'react'\r\nimport UserPP from '../images/userpp.svg'\r\nimport Movie from '../images/movie.svg'\r\nimport Delete from '../images/delete.svg'\r\nimport Book from '../images/contentbook.svg'\r\nimport classes from './styles/entry.module.css'\r\nimport { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Entry = ( props ) => {\r\n    \r\n    return (\r\n        <div title=\"entry\" className={classes.entry}>\r\n            <div className={classes.topinfo}>\r\n                <Link className={classes.link} to={`/lib/profile/${props.authorID}`}>\r\n                    <div className={classes.userinfo}>\r\n                        <img src={UserPP} width=\"32px\" alt=\"\"/>\r\n                        <p>{props.firstname + \" \" + props.lastname}</p>\r\n                    </div>\r\n                </Link>\r\n                <p>{props.date}</p>\r\n                <img title=\"delete\" className={classes.delete} width=\"16px\" src={Delete} alt=\"\"/>\r\n            </div>\r\n            <div className={classes.contentinfo}>\r\n                <img className={classes.icon} src={(props.type == \"book\")? Book : Movie} width=\"53px\" alt=\"\"/>\r\n                <div title=\"midsec\" className={classes.middlesection}>\r\n                 <h3 className={classes.contentname}>{props.contentname}</h3>\r\n                 <em className={classes.comment}>“{props.comment}”</em>\r\n                </div>\r\n                <h3 className={classes.rating}>{props.rating}/10</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Entry\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\UserInfo.js",["110","111"],"import classes from './styles/userinfo.module.css'\r\nimport React from 'react'\r\nimport UserPP from '../images/userpp.svg'\r\nimport Movie from '../images/videowhite.svg'\r\nimport Book from '../images/favbook.svg'\r\nimport { useState, useEffect } from 'react'\r\nimport Button from './Button'\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.userwithfollowers}>\r\n            <div className={classes.userinfo}>\r\n                <img className={classes.profilephoto} src={UserPP} alt=\"\"/>\r\n                <div className={classes.useridfollow}>\r\n                    <h5 className={classes.userid}>{props.firstname + \" \" + props.lastname}</h5>\r\n                    <Button follow={props.follows} id={props.id} />\r\n                </div>\r\n            </div>\r\n            <div className={classes.interactioninfo}>\r\n                <span><strong>{props.posts}</strong>  posts</span>\r\n                <span><strong>{props.followers}</strong>  followers</span>\r\n                <span><strong>{props.following}</strong>  following</span>\r\n            </div>\r\n            </div>\r\n            <div className={classes.favourites}>\r\n                <div className={classes.bookfavourite}>\r\n                    <img src={Book} width=\"62px\" alt=\"\"/>\r\n                    <span>{props.favouritebook}</span>\r\n                </div>\r\n                <div className={classes.moviefavourite}>\r\n                    <img src={Movie} width=\"62px\" alt=\"\"/>\r\n                    <span>{props.favouritemovie}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Home.js",["112","113","114","115","116","117","118"],"import React from 'react'\r\nimport Entry from './Entry'\r\nimport AddContent from './AddContent'\r\nimport classes from './styles/home.module.css'\r\nimport { json } from 'body-parser'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport ReactLoading from 'react-loading'\r\nimport NotFound from './NotFound'\r\n\r\n\r\nconst Home = () => {\r\n    const formatDate = (mydate) => {\r\n       let date = new Date(mydate);\r\n       let year = date.getFullYear();\r\n       let month = date.getMonth()+1;\r\n       let dt = date.getDate();\r\n\r\n        if (dt < 10) {\r\n            dt = '0' + dt;\r\n        }   \r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        return dt+'.' + month + '.'+year;\r\n    }\r\n\r\n\r\n    const getUserInfo = (post) => {\r\n        return allPosts.authorInfo.filter(filter => filter._id == post.authorID)[0];\r\n    }\r\n\r\n    const checkIsSelfAccount = (author) => {\r\n        return author === localStorage.getItem(\"currentUser\");\r\n    }\r\n\r\n    \r\n    const [allPosts, setAllPosts] = useState();\r\n    const [myData, setMyData] = useState({});\r\n    const [authorInfo, setAuthorInfo] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [userFollows, setUserFollows] = useState();\r\n    const [postsShown, setPostsShown] = useState();\r\n    let userFollowingTemp = [];\r\n    let allPostsTemp = {};\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://my-web-lib.herokuapp.com/posts`)\r\n        .then(res => {\r\n            console.log(res)\r\n            setAllPosts(res.data);\r\n            allPostsTemp = res.data.data;\r\n            console.log(allPostsTemp);\r\n            res.data.data.reverse();\r\n            setAuthorInfo(res.data.authorInfo);\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 700);\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n        userFollowing();\r\n        personalFeed();\r\n    }, [])\r\n\r\n    const userFollowing = () => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem(\"token\")\r\n            }\r\n        };\r\n       axios.get(`https://my-web-lib.herokuapp.com/members/${localStorage.getItem(\"currentUser\")}`, config)\r\n        .then(res => {\r\n            console.log(res.data.data.follow);\r\n            userFollowingTemp = res.data.data.follow;\r\n            setUserFollows(userFollowingTemp);\r\n            console.log(userFollowingTemp);\r\n        })} \r\n       \r\n\r\n    const personalFeed = () => {\r\n        setTimeout(() => {\r\n            const postsWanted = [];\r\n            for (let i = 0; i < allPostsTemp.length; i++) {\r\n                for (let j = 0; j < userFollowingTemp.length; j++) {\r\n                   if(allPostsTemp[i].authorID === userFollowingTemp[j].userID){\r\n                       postsWanted.push(allPostsTemp[i])\r\n                       console.log(allPostsTemp[i])\r\n                   }\r\n                    \r\n                }\r\n                \r\n            }\r\n            setPostsShown(postsWanted);\r\n        }, 1000);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className={classes.feed}>\r\n            <AddContent/>\r\n            <div className={classes.content}>\r\n                {loading ? <div className={classes.loader}><ReactLoading type=\"spin\" color=\"#2DB7E3\" height={50} width={50} /></div>\r\n                :postsShown && postsShown.length ? postsShown.map((post, index) => {\r\n                return <Entry\r\n                    key={post._id}\r\n                    authorID={checkIsSelfAccount(post.authorID) ? \"\" : post.authorID}\r\n                    firstname={getUserInfo(post).firstName}\r\n                    lastname={getUserInfo(post).lastName}\r\n                    type={post.type}\r\n                    contentname={post.title} \r\n                    comment={post.description} \r\n                    rating={post.score} \r\n                    date={formatDate(post.date)}/>       \r\n                }): !loading && <NotFound msg=\"Follow someone to start seeing posts\"/>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Navbar.js",["119"],"import React, {useState, useEffect} from 'react'\r\nimport Book from '../images/newbook.svg'\r\nimport classes from './styles/navbar.module.css'\r\nimport UserPP from '../images/userpp.svg'\r\nimport LogOut from '../images/logout.svg'\r\nimport Loupe from '../images/loupe.svg'\r\nimport Settings from '../images/settings.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications'\r\n\r\n\r\nconst Navbar = () => {\r\n    const [user, setUser] = useState({});\r\n    const [search, setSearch] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    const {addToast} = useToasts();\r\n    const logOut = () => {\r\n        localStorage.clear();\r\n    }\r\n    const handleSearchQuery = (e) => {\r\n        setSearch(e.target.value);\r\n        console.log(search);\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        if(search !== \"\"){\r\n            history.push(`/lib/search/${search}`);\r\n            window.location.reload(false);\r\n        }\r\n        else{\r\n            addToast(\"Search bar can not be empty.\", {\r\n                appearance: 'warning',\r\n                autoDismiss: true,\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    const handleEnter = (e) => {\r\n        if(e.key === \"Enter\"){\r\n            if(search !== \"\") {\r\n                history.push(`/lib/search/${search}`);\r\n                window.location.reload(false);\r\n            }\r\n        }\r\n        else if(e.key ===\"Enter\" && search===\"\"){\r\n            addToast(\"Search bar can not be empty.\", {\r\n                appearance: 'warning',\r\n                autoDismiss: true,\r\n            })\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem(\"token\")\r\n            }\r\n        };\r\n       axios.get(`https://my-web-lib.herokuapp.com/members/${localStorage.getItem(\"currentUser\")}`, config)\r\n        .then(res => {\r\n            setUser(res.data.data);\r\n            setLoading(false);\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav className={classes.navbar}>\r\n                <Link to=\"/lib/home\">\r\n                    <div className={classes.logo}>\r\n                        <img src={Book} width=\"61px\" alt=\"\"/>\r\n                        <h1>MyWebLib</h1>\r\n                    </div>\r\n                </Link>\r\n                <label className={classes.searchlabel} for=\"search\"></label>\r\n                <div className={classes.searchbar}>\r\n                    <input onKeyPress={handleEnter} onChange={handleSearchQuery} type=\"text\" placeholder=\"search\" name=\"\" id=\"search\"/>\r\n                    <button onClick={handleSearch} ><img src={Loupe} width='18px' alt=\"\"/></button>\r\n                </div>\r\n                <Link to=\"/lib/profile\">\r\n                    <div className={classes.userinfo}>\r\n                        <span>{!loading ? user.firstName + \" \" + user.lastName : \"\"}</span>\r\n                        <img src={UserPP} width=\"36px\" alt=\"\"/>\r\n                    </div>\r\n                </Link>\r\n                <img src={Settings} alt=\"\"/>\r\n                <Link to=\"/\">\r\n                    <img onClick={logOut} className={classes.logout} src={LogOut} width=\"36px\" alt=\"\"/>\r\n                </Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Profile.js",["120","121","122","123","124","125"],"import React, {useEffect, useState} from 'react'\r\nimport Entry from './Entry'\r\nimport UserInfo from './UserInfo'\r\nimport classes from './styles/profile.module.css';\r\nimport axios from 'axios'\r\nimport ReactLoading from 'react-loading'\r\nimport NotFound from './NotFound';\r\n\r\n\r\nconst Profile = ( {match} ) => {\r\n\r\n    const [userInfo, setUserInfo] = useState();\r\n    const [userloading, setuserLoading] = useState(true);\r\n    const [postloading, setpostLoading] = useState(true);\r\n    const [posts, setPosts] = useState();\r\n    const [usersPosts, setUsersPosts] = useState();\r\n    let userspoststemp = [];\r\n    let myposts = {};\r\n    let usersfavposts = [];\r\n    const [favBook, setFavBook] = useState(\"\");\r\n    const [favMovie, setFavMovie] = useState(\"\");\r\n    const [followers, setFollowers] = useState();\r\n    const [clicked, setClicked] = useState(false);\r\n    const [isEmpty, setIsempty] = useState(true);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(match.params.id);\r\n        getUserInfo();\r\n        getPosts();\r\n        console.log(getUsersPosts);\r\n    }, [clicked])\r\n    \r\n    const handleClickUI = () => {\r\n        setClicked(true);\r\n    }\r\n    const checkIsSelfAccount = (author) => {\r\n        return author === localStorage.getItem(\"currentUser\");\r\n    }\r\n\r\n    \r\n    const getUserInfo = () => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem(\"token\")\r\n            }\r\n        };\r\n       axios.get(`https://my-web-lib.herokuapp.com/members/${match.params.id}`, config)\r\n        .then(res => {\r\n            console.log(res);\r\n            setUserInfo(res.data.data);\r\n            setFollowers(res.data.data.followers);\r\n            setuserLoading(false);\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    const getPosts = () => {\r\n        axios.get(`https://my-web-lib.herokuapp.com/posts`)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setPosts(res.data);\r\n            myposts= res.data;\r\n            usersfavposts = getUsersNotReversedPosts();\r\n            console.log(usersfavposts);\r\n            setFavBook(getfavouriteBook());\r\n            setFavMovie(getfavouriteMovie());\r\n            setUsersPosts(getUsersPosts());\r\n            userspoststemp = getUsersPosts();\r\n            (!userspoststemp === []) ? setIsempty(false): setIsempty(true);\r\n            setpostLoading(false);\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const formatDate = (mydate) => {\r\n        let date = new Date(mydate);\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth()+1;\r\n        let dt = date.getDate();\r\n \r\n         if (dt < 10) {\r\n             dt = '0' + dt;\r\n         }   \r\n         if (month < 10) {\r\n             month = '0' + month;\r\n         }\r\n \r\n         return dt+'.' + month + '.'+year;\r\n     }\r\n    \r\n    const getUsersPosts = () => {\r\n        const userposts = [];\r\n        console.log(\"data in get users\" + myposts)\r\n        myposts && myposts.data.forEach(post => {\r\n            if (post.authorID === match.params.id){\r\n                console.log(post)\r\n                userposts.push(post);\r\n            }\r\n        })\r\n        const reversedposts = userposts.map(item => item).reverse();\r\n        return reversedposts;\r\n    }\r\n\r\n    const getUsersNotReversedPosts = () => {\r\n        const userposts = [];\r\n        console.log(\"data in get users\" + myposts)\r\n        myposts && myposts.data.forEach(post => {\r\n            if (post.authorID === match.params.id){\r\n                console.log(post)\r\n                userposts.push(post);\r\n            }\r\n        })\r\n        return userposts;\r\n    }\r\n\r\n    const getfavouriteBook = () => {\r\n        const bookposts = [];\r\n        usersfavposts.forEach(post => {\r\n            if (post.type === \"book\"){\r\n                bookposts.push(post);\r\n            }\r\n        })\r\n        if (bookposts.length==0) return \"\";\r\n        bookposts.sort((a,b) => {\r\n            return a.score-b.score;\r\n        })\r\n         console.log(bookposts)\r\n         return bookposts[bookposts.length - 1].title;\r\n        \r\n    } \r\n    \r\n    const getfavouriteMovie = () => {\r\n        const movieposts = [];\r\n        usersfavposts.forEach(post => {\r\n            if (post.type === \"movie\"){\r\n                movieposts.push(post);\r\n            }\r\n        })\r\n        if (movieposts.length==0) return \"\";\r\n        movieposts.sort((a,b) => {\r\n            return a.score-b.score;\r\n        })\r\n         console.log(movieposts)\r\n         return movieposts[movieposts.length - 1].title;\r\n        \r\n    }      \r\n    const matchUser = (post) => {\r\n        return posts.authorInfo.filter(filter => filter._id == post.authorID)[0];\r\n    }\r\n    \r\n    return (\r\n        \r\n            userloading && postloading ? <div className={classes.loader}><ReactLoading type=\"spin\" color=\"#2DB7E3\" height={50} width={50} /></div> :\r\n            <div className={classes.profile}>        \r\n             {usersPosts && userInfo && <UserInfo onclick={handleClickUI} follows={userInfo.follow} id={userInfo._id} firstname={userInfo.firstName} lastname={userInfo.lastName} posts={usersPosts.length} followers={userInfo.followers.length} following={userInfo.follow.length} favouritebook={favBook} favouritemovie={favMovie}/>}\r\n                <div className={classes.entries}>\r\n                    \r\n                    {usersPosts && usersPosts.length ? usersPosts.map (post => {\r\n                        return <Entry\r\n                        key={post._id}\r\n                        authorID={checkIsSelfAccount(post.authorID) ? \"\" : post.authorID}\r\n                        firstname={matchUser(post).firstName}\r\n                        lastname={matchUser(post).lastName}\r\n                        type={post.type}\r\n                        contentname={post.title} \r\n                        comment={post.description} \r\n                        rating={post.score} \r\n                        date={formatDate(post.date)}\r\n                        /> \r\n                    }): !postloading && <NotFound msg=\"This user has not posted anything yet\" />\r\n                    }\r\n                </div>\r\n        </div>\r\n        \r\n       \r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Button.js",["126","127","128","129"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport classes from './styles/button.module.css'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst Button = (props) => {\r\n    const [isFollowing, setIsFollowing] = useState();\r\n    const [follow, setFollow] = useState(\"follow\");\r\n    const [userFollows, setUserFollows] = useState();\r\n    const [clicked, setClicked] = useState(false);\r\n    let userFollowsTemp = [];\r\n    let followTemp = \"follow\";\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n\r\n    useEffect(() => {\r\n        setButtonVisuals(); \r\n        setButtonState();\r\n    }, [clicked])\r\n\r\n    const checkIsFollowing = (follows) => {\r\n        let flag=false;\r\n        follows.forEach(user => {\r\n            if (props.id === user.userID){\r\n                setFollow('unfollow')\r\n                flag=true;\r\n            };\r\n        })\r\n        return flag;\r\n    }\r\n    const setButtonVisuals = () =>{\r\n       if (checkIsFollowing(userFollowsTemp)){\r\n           setFollow(\"unfollow\")\r\n           console.log('set button to unfollow')\r\n           \r\n       }\r\n       else{\r\n           setFollow(\"follow\");\r\n           console.log('set button to follow')\r\n       }\r\n       \r\n    }\r\n\r\n\r\n    const setButtonState = () => {\r\n            const config = {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"token\")\r\n                }\r\n            };\r\n           axios.get(`https://my-web-lib.herokuapp.com/members/${localStorage.getItem(\"currentUser\")}`, config)\r\n            .then(res => {\r\n                console.log(res.data.data.follow);\r\n                userFollowsTemp = res.data.data.follow;              \r\n                setIsFollowing(checkIsFollowing(userFollowsTemp));\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            })\r\n        }\r\n\r\n    const followUnfollowUser = (e) => {\r\n    if(!isFollowing){\r\n        followTemp = \"follow\";\r\n        axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem(\"token\"), \r\n            },\r\n            data:{\r\n                id: props.id,\r\n            },\r\n            url: \"https://my-web-lib.herokuapp.com/members/follow\"\r\n        }).then((res) => {\r\n            console.log(res)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error.response)\r\n        })\r\n        setClicked(!clicked);\r\n\r\n    }\r\n    else{\r\n        followTemp=\"unfollow\";\r\n        axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem(\"token\"), \r\n            },\r\n            data:{\r\n                id: props.id,\r\n            },\r\n            url: \"https://my-web-lib.herokuapp.com/members/unFollow\"\r\n        }).then((res) => {\r\n            console.log(res)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error.response)\r\n        })\r\n        \r\n    }\r\n    setClicked(!clicked);\r\n}\r\n\r\n\r\nreturn (\r\n    <div>\r\n            <button className={classes.button} onClick={followUnfollowUser}>{!loading ? follow : \"\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\Search.js",["130"],"C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\SearchResult.js",[],"C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\AddContent.js",["131","132","133","134"],"import React from 'react'\r\nimport classes from './styles/addcontent.module.css'\r\nimport { useState, useEffect } from 'react';\r\nimport Switch from \"react-switch\";\r\nimport Book from '../images/bookwhite.svg'\r\nimport Movie from '../images/videowhite.svg'\r\nimport axios from 'axios'\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications'\r\nimport { findAllByTitle } from '@testing-library/react';\r\n\r\n\r\n\r\nconst AddContent = () => {\r\n    const [contentType, setContentType] = useState(\"book\");\r\n    const [checked, setChecked] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [score, setScore] = useState(1);\r\n    const {addToast} = useToasts();\r\n\r\n    const handleChange = () => {\r\n        setChecked(!checked);\r\n        setContentType((contentType === \"book\") ? \"movie\" : \"book\");\r\n    }\r\n\r\n    const sendPost = () => {\r\n        axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem(\"token\"), \r\n            },\r\n            data:{\r\n                authorID: localStorage.getItem(\"currentUser\"),\r\n                title: title,\r\n                description: comment,\r\n                type: contentType,\r\n                score: score,\r\n                category: \"cat\"\r\n            },\r\n            url: \"https://my-web-lib.herokuapp.com/posts\"\r\n        }).then((res) => {\r\n            console.log(res)\r\n            if(res.status == 200){\r\n                addToast(\"You post has been sent succesfully!\", {\r\n                    appearance: 'success',\r\n                    autoDismiss: true,\r\n                })\r\n            }\r\n\r\n        }).catch(error =>{\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    // const sendPost = () => {\r\n    //     const data = {\r\n    //         headers: {\r\n    //             Authorization: 'Bearer ' + localStorage.getItem(\"token\"),\r\n    //         },\r\n\r\n    //         authorID: localStorage.getItem(\"currentUser\"),\r\n    //         title: title,\r\n    //         description: comment,\r\n    //         type: contentType,\r\n    //         score: score,\r\n    //     }\r\n\r\n    //     axios.post(\"http://localhost:8000/posts\", data)\r\n    //         .then(res => {\r\n    //             console.log(res);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error.response);\r\n    //         })\r\n    // }\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const commentChangeHandler = (e) => {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    const scoreChangeHandler = (e) => {\r\n        setScore(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addcontent} >\r\n           <div className={classes.left}>\r\n           <em>Share a public book or movie</em>\r\n            <div className={classes.titlerating}>\r\n                <input onChange={titleChangeHandler} className={classes.contenttitle} placeholder=\"title\" type=\"text\"/>\r\n                <select onChange={scoreChangeHandler} name=\"\" id=\"\">\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                </select>\r\n                \r\n            </div>\r\n            <textarea onChange={commentChangeHandler} className={classes.comment} placeholder=\"what do you think about this?\"></textarea>\r\n           </div>\r\n            <div className={classes.right}>\r\n            <div className={classes.toggler}>\r\n                <img className={classes.book} src={Book} width=\"50px\" alt=\"\"/>\r\n                <label>\r\n                    <label htmlFor=\"material-switch\">\r\n                    <Switch\r\n                        checked={checked}\r\n                        onChange={handleChange}\r\n                        onColor=\"#3A1772\"\r\n                        offColor=\"#3A1772\"\r\n                        onHandleColor=\"#fff\"\r\n                        offHandleColor=\"#fff\"\r\n                        handleDiameter={30}\r\n                        uncheckedIcon={false}\r\n                        checkedIcon={false}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={40}\r\n                        width={120}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                    </label>\r\n                </label>\r\n                <img className={classes.movie} src={Movie} width=\"50px\" alt=\"\"/>\r\n            </div>\r\n            <button onClick={sendPost} className={classes.button}>post</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContent\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\SelfUserInfo.js",["135","136"],"import classes from './styles/userinfo.module.css'\r\nimport React from 'react'\r\nimport UserPP from '../images/userpp.svg'\r\nimport Movie from '../images/videowhite.svg'\r\nimport Book from '../images/favbook.svg'\r\nimport { useState } from 'react'\r\nimport Button from './Button'\r\n\r\nconst SelfUserInfo = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.userinfo}>\r\n                <img className={classes.profilephoto} src={UserPP} alt=\"\"/>\r\n                <div className={classes.useridfollow}>\r\n                <h5 className={classes.userid}>{props.firstname + \" \" + props.lastname}</h5>\r\n                </div>\r\n            </div>\r\n            <div className={classes.interactioninfo}>\r\n                <span><strong>{props.posts}</strong>  posts</span>\r\n                <span><strong>{props.followers}</strong>  followers</span>\r\n                <span><strong>{props.following}</strong>  following</span>\r\n            </div>\r\n            <div className={classes.favourites}>\r\n                <div className={classes.bookfavourite}>\r\n                    <img src={Book} width=\"62px\" alt=\"\"/>\r\n                    <span>{props.favouritebook}</span>\r\n                </div>\r\n                <div className={classes.moviefavourite}>\r\n                    <img src={Movie} width=\"62px\" alt=\"\"/>\r\n                    <span>{props.favouritemovie}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelfUserInfo\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\auth.js",["137","138"],"import axios from 'axios';\r\n\r\nlet currentUser = \"\";\r\n\r\n\r\nconst Deneme = {\r\n    authenticated: false,\r\n    currentUser: \"\",\r\n\r\n    signup: (name, surname, email, password) => {\r\n            axios({\r\n                method: \"POST\",\r\n                data: {\r\n                    firstName: name,\r\n                    lastName: surname,\r\n                    email: email,\r\n                    password: password\r\n                },\r\n                url: \"http://localhost:8000/members/signup\",\r\n            }).then((res) => console.log(res))\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            })\r\n       \r\n    },\r\n\r\n    login: (email, password) => {\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                email: email,\r\n                password: password\r\n            },\r\n            url: \"http://localhost:8000/members/login\"\r\n           }).then((res) => {\r\n            console.log(res)\r\n                \r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    },\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Auth {\r\n    constructor(){\r\n        this.currentUser = \"\";\r\n        this.authenticated = false;\r\n    }\r\n    signup = (name, surname, email, password) => {\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                firstName: name,\r\n                lastName: surname,\r\n                email: email,\r\n                password: password\r\n            },\r\n            url: \"http://localhost:8000/members/signup\",\r\n        }).then((res) => console.log(res))\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    };\r\n\r\n    login = (email, password) => {\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                email: email,\r\n                password: password\r\n            },\r\n            url: \"http://localhost:8000/members/login\"\r\n           }).then((res) => {\r\n            console.log(res)\r\n                if(res.status === 200){\r\n                this.currentUser = res.data.data._id;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n}\r\n\r\nexport default Deneme;","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\SelfProfile.js",["139","140","141","142","143"],"import React from 'react'\r\nimport Entry from './Entry'\r\nimport UserInfo from './UserInfo'\r\nimport SelfUserInfo from './SelfUserInfo'\r\nimport classes from './styles/profile.module.css';\r\nimport axios from 'axios'\r\nimport ReactLoading from 'react-loading'\r\nimport {useEffect, useState} from 'react'\r\nimport NotFound from './NotFound';\r\n\r\nconst SelfProfile = () => {\r\n    const [userInfo, setUserInfo] = useState();\r\n    const [userloading, setuserLoading] = useState(true);\r\n    const [postloading, setpostLoading] = useState(true);\r\n    const [posts, setPosts] = useState();\r\n    const [usersPosts, setUsersPosts] = useState();\r\n    let myposts = {};\r\n    let usersfavposts = [];\r\n    const [favBook, setFavBook] = useState(\"\");\r\n    const [favMovie, setFavMovie] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        console.log(localStorage.getItem(\"currentUser\"));\r\n        getUserInfo();\r\n        getPosts();\r\n        console.log(getUsersPosts);\r\n    }, [])\r\n\r\n    const checkIsSelfAccount = (author) => {\r\n        return author === localStorage.getItem(\"currentUser\");\r\n    }\r\n    \r\n    const getUserInfo = () => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem(\"token\")\r\n            }\r\n        };\r\n       axios.get(`https://my-web-lib.herokuapp.com/members/${localStorage.getItem(\"currentUser\")}`, config)\r\n        .then(res => {\r\n            console.log(res);\r\n            setUserInfo(res.data.data);\r\n            setuserLoading(false);\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    const getPosts = () => {\r\n        axios.get(`https://my-web-lib.herokuapp.com/posts`)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setPosts(res.data);\r\n            myposts= res.data;\r\n            usersfavposts = getUsersNotReversedPosts();\r\n            console.log(usersfavposts);\r\n            setFavBook(getfavouriteBook());\r\n            setFavMovie(getfavouriteMovie());\r\n            setUsersPosts(getUsersPosts());\r\n            setpostLoading(false);\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const formatDate = (mydate) => {\r\n        let date = new Date(mydate);\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth()+1;\r\n        let dt = date.getDate();\r\n \r\n         if (dt < 10) {\r\n             dt = '0' + dt;\r\n         }   \r\n         if (month < 10) {\r\n             month = '0' + month;\r\n         }\r\n \r\n         return dt+'.' + month + '.'+year;\r\n     }\r\n    \r\n    const getUsersPosts = () => {\r\n        const userposts = [];\r\n        console.log(\"data in get users\" + myposts)\r\n        myposts && myposts.data.forEach(post => {\r\n            if (post.authorID === localStorage.getItem(\"currentUser\")){\r\n                console.log(post)\r\n                userposts.push(post);\r\n            }\r\n        })\r\n        const reversedposts = userposts.map(item => item).reverse();\r\n        return reversedposts;\r\n    }\r\n\r\n    const getUsersNotReversedPosts = () => {\r\n        const userposts = [];\r\n        console.log(\"data in get users\" + myposts)\r\n        myposts && myposts.data.forEach(post => {\r\n            if (post.authorID === localStorage.getItem(\"currentUser\")){\r\n                console.log(post)\r\n                userposts.push(post);\r\n            }\r\n        })\r\n        return userposts;\r\n    }\r\n\r\n    const matchUser = (post) => {\r\n        return posts.authorInfo.filter(filter => filter._id == post.authorID)[0];\r\n    }\r\n\r\n    const getfavouriteBook = () => {\r\n        const bookposts = [];\r\n        usersfavposts.forEach(post => {\r\n            if (post.type === \"book\"){\r\n                bookposts.push(post);\r\n            }\r\n        })\r\n        if (bookposts.length==0) return \"\";\r\n        bookposts.sort((a,b) => {\r\n            return a.score-b.score;\r\n        })\r\n         console.log(bookposts)\r\n         return bookposts[bookposts.length - 1].title;\r\n        \r\n    } \r\n    \r\n    const getfavouriteMovie = () => {\r\n        const movieposts = [];\r\n        usersfavposts.forEach(post => {\r\n            if (post.type === \"movie\"){\r\n                movieposts.push(post);\r\n            }\r\n        })\r\n        if (movieposts.length==0) return \"\";\r\n        movieposts.sort((a,b) => {\r\n            return a.score-b.score;\r\n        })\r\n         console.log(movieposts)\r\n         return movieposts[movieposts.length - 1].title;\r\n        \r\n    }      \r\n    \r\n    return (\r\n        \r\n            userloading && postloading ? <div className={classes.loader}><ReactLoading type=\"spin\" color=\"#2DB7E3\" height={50} width={50} /></div> :\r\n            <div className={classes.profile}>        \r\n             {usersPosts && userInfo && usersPosts.length && userInfo.followers.length && userInfo.follow.length && \r\n             <SelfUserInfo \r\n                    follows={userInfo.follow} \r\n                    id={userInfo._id} \r\n                    firstname={userInfo.firstName} \r\n                    lastname={userInfo.lastName} \r\n                    posts={usersPosts.length} \r\n                    followers={userInfo.followers.length} \r\n                    following={userInfo.follow.length} \r\n                    favouritebook={favBook} \r\n                    favouritemovie={favMovie}\r\n                />}\r\n\r\n                <div className={classes.entries}>\r\n                    {posts && usersPosts && usersPosts.length ? usersPosts.map (post => {\r\n                        return <Entry\r\n                        key={post._id}\r\n                        authorID={checkIsSelfAccount(post.authorID) ? \"\" : post.authorID}\r\n                        firstname={matchUser(post).firstName}\r\n                        lastname={matchUser(post).lastName}\r\n                        type={post.type}\r\n                        contentname={post.title} \r\n                        comment={post.description} \r\n                        rating={post.score} \r\n                        date={formatDate(post.date)}/> \r\n                    }): !postloading && <NotFound msg=\"You have not posted anything yet\"/>\r\n                }\r\n                </div>\r\n        </div>\r\n        \r\n       \r\n    )\r\n}\r\n\r\nexport default SelfProfile\r\n","C:\\Users\\Berk\\Desktop\\Code\\myweblib-react-new\\src\\components\\NotFound.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":10,"column":3,"nodeType":"150","messageId":"151","endLine":10,"endColumn":9},{"ruleId":"148","severity":1,"message":"152","line":12,"column":3,"nodeType":"150","messageId":"151","endLine":12,"endColumn":7},{"ruleId":"148","severity":1,"message":"153","line":16,"column":8,"nodeType":"150","messageId":"151","endLine":16,"endColumn":13},{"ruleId":"148","severity":1,"message":"154","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":24,"column":8,"nodeType":"150","messageId":"151","endLine":24,"endColumn":20},{"ruleId":"148","severity":1,"message":"156","line":27,"column":10,"nodeType":"150","messageId":"151","endLine":27,"endColumn":23},{"ruleId":"148","severity":1,"message":"157","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":14},{"ruleId":"148","severity":1,"message":"156","line":13,"column":10,"nodeType":"150","messageId":"151","endLine":13,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":44,"column":32,"nodeType":"160","messageId":"161","endLine":44,"endColumn":34},{"ruleId":"148","severity":1,"message":"162","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":17},{"ruleId":"148","severity":1,"message":"163","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":15},{"ruleId":"148","severity":1,"message":"164","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":12},{"ruleId":"148","severity":1,"message":"153","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":13},{"ruleId":"148","severity":1,"message":"165","line":13,"column":8,"nodeType":"150","messageId":"151","endLine":13,"endColumn":12},{"ruleId":"148","severity":1,"message":"156","line":15,"column":10,"nodeType":"150","messageId":"151","endLine":15,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":61,"column":27,"nodeType":"160","messageId":"161","endLine":61,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":73,"column":39,"nodeType":"160","messageId":"161","endLine":73,"endColumn":41},{"ruleId":"166","severity":1,"message":"167","line":80,"column":50,"nodeType":"168","messageId":"169","endLine":80,"endColumn":52},{"ruleId":"148","severity":1,"message":"170","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":25,"column":64,"nodeType":"160","messageId":"161","endLine":25,"endColumn":66},{"ruleId":"148","severity":1,"message":"170","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":18},{"ruleId":"148","severity":1,"message":"171","line":6,"column":20,"nodeType":"150","messageId":"151","endLine":6,"endColumn":29},{"ruleId":"148","severity":1,"message":"172","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":31,"column":64,"nodeType":"160","messageId":"161","endLine":31,"endColumn":66},{"ruleId":"148","severity":1,"message":"173","line":40,"column":12,"nodeType":"150","messageId":"151","endLine":40,"endColumn":18},{"ruleId":"148","severity":1,"message":"174","line":40,"column":20,"nodeType":"150","messageId":"151","endLine":40,"endColumn":29},{"ruleId":"148","severity":1,"message":"175","line":41,"column":12,"nodeType":"150","messageId":"151","endLine":41,"endColumn":22},{"ruleId":"148","severity":1,"message":"176","line":43,"column":12,"nodeType":"150","messageId":"151","endLine":43,"endColumn":23},{"ruleId":"177","severity":1,"message":"178","line":53,"column":28,"nodeType":"179","endLine":53,"endColumn":41},{"ruleId":"148","severity":1,"message":"156","line":11,"column":10,"nodeType":"150","messageId":"151","endLine":11,"endColumn":23},{"ruleId":"148","severity":1,"message":"180","line":22,"column":12,"nodeType":"150","messageId":"151","endLine":22,"endColumn":21},{"ruleId":"148","severity":1,"message":"181","line":24,"column":12,"nodeType":"150","messageId":"151","endLine":24,"endColumn":19},{"ruleId":"177","severity":1,"message":"182","line":33,"column":8,"nodeType":"183","endLine":33,"endColumn":17,"suggestions":"184"},{"ruleId":"158","severity":1,"message":"159","line":128,"column":29,"nodeType":"160","messageId":"161","endLine":128,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":144,"column":30,"nodeType":"160","messageId":"161","endLine":144,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":153,"column":61,"nodeType":"160","messageId":"161","endLine":153,"endColumn":63},{"ruleId":"148","severity":1,"message":"176","line":11,"column":12,"nodeType":"150","messageId":"151","endLine":11,"endColumn":23},{"ruleId":"148","severity":1,"message":"185","line":11,"column":25,"nodeType":"150","messageId":"151","endLine":11,"endColumn":39},{"ruleId":"177","severity":1,"message":"186","line":21,"column":8,"nodeType":"183","endLine":21,"endColumn":17,"suggestions":"187"},{"ruleId":"148","severity":1,"message":"188","line":87,"column":9,"nodeType":"150","messageId":"151","endLine":87,"endColumn":19},{"ruleId":"177","severity":1,"message":"189","line":19,"column":8,"nodeType":"183","endLine":19,"endColumn":10,"suggestions":"190"},{"ruleId":"148","severity":1,"message":"171","line":3,"column":20,"nodeType":"150","messageId":"151","endLine":3,"endColumn":29},{"ruleId":"148","severity":1,"message":"156","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":23},{"ruleId":"148","severity":1,"message":"191","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":43,"column":27,"nodeType":"160","messageId":"161","endLine":43,"endColumn":29},{"ruleId":"148","severity":1,"message":"170","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":18},{"ruleId":"148","severity":1,"message":"154","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":14},{"ruleId":"148","severity":1,"message":"192","line":3,"column":5,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"165","line":51,"column":7,"nodeType":"150","messageId":"151","endLine":51,"endColumn":11},{"ruleId":"148","severity":1,"message":"193","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"177","severity":1,"message":"194","line":27,"column":8,"nodeType":"183","endLine":27,"endColumn":10,"suggestions":"195"},{"ruleId":"158","severity":1,"message":"159","line":109,"column":61,"nodeType":"160","messageId":"161","endLine":109,"endColumn":63},{"ruleId":"158","severity":1,"message":"159","line":119,"column":29,"nodeType":"160","messageId":"161","endLine":119,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":135,"column":30,"nodeType":"160","messageId":"161","endLine":135,"endColumn":32},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Entry' is defined but never used.","'Button' is defined but never used.","'SearchResult' is defined but never used.","'ToastProvider' is defined but never used.","'Deneme' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'emailicon' is defined but never used.","'padlock' is defined but never used.","'user' is defined but never used.","'Auth' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'json' is defined but never used.","'myData' is assigned a value but never used.","'setMyData' is assigned a value but never used.","'authorInfo' is assigned a value but never used.","'userFollows' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'allPostsTemp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'followers' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPosts', 'getUserInfo', 'getUsersPosts', and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["198"],"'setUserFollows' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setButtonState' and 'setButtonVisuals'. Either include them or remove the dependency array.",["199"],"'followTemp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUsers' and 'match.params.query'. Either include them or remove the dependency array.",["200"],"'findAllByTitle' is defined but never used.","'currentUser' is assigned a value but never used.","'UserInfo' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'getUsersPosts'. Either include them or remove the dependency array.",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [clicked, getPosts, getUserInfo, getUsersPosts, match.params.id]",{"range":"210","text":"211"},"Update the dependencies array to be: [clicked, setButtonState, setButtonVisuals]",{"range":"212","text":"213"},"Update the dependencies array to be: [getUsers, match.params.query]",{"range":"214","text":"215"},"Update the dependencies array to be: [getPosts, getUsersPosts]",{"range":"216","text":"217"},[1071,1080],"[clicked, getPosts, getUserInfo, getUsersPosts, match.params.id]",[608,617],"[clicked, setButtonState, setButtonVisuals]",[569,571],"[getUsers, match.params.query]",[953,955],"[getPosts, getUsersPosts]"]